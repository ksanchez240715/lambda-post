{
  "C:\\DEV\\NodeJS\\BackendNodeJSAWS\\lambda-post": {
    "versionSfCore": null,
    "versionFramework": "4.4.4",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "C:\\DEV\\NodeJS\\BackendNodeJSAWS\\lambda-post",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "lambda-post",
      "provider": {
        "name": "aws",
        "runtime": "nodejs18.x",
        "stage": "dev",
        "region": "us-east-1",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ApiDocsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/lambda-post-dev-apiDocs"
              }
            },
            "SwaggerUiHandlerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/lambda-post-dev-swaggerUiHandler"
              }
            },
            "PostSpecieLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/lambda-post-dev-postSpecie"
              }
            },
            "PostVehicleLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/lambda-post-dev-postVehicle"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "lambda-post",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-post-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/lambda-post-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "lambda-post",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "ApiDocsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-25f59da2-0c72",
                  "S3Key": "serverless/lambda-post/dev/1728304090829-2024-10-07T12:28:10.829Z/lambda-post.zip"
                },
                "Handler": "swaggerHandler.apiDocs",
                "Runtime": "nodejs18.x",
                "FunctionName": "lambda-post-dev-apiDocs",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ApiDocsLogGroup"
              ]
            },
            "SwaggerUiHandlerLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-25f59da2-0c72",
                  "S3Key": "serverless/lambda-post/dev/1728304090829-2024-10-07T12:28:10.829Z/lambda-post.zip"
                },
                "Handler": "swaggerHandler.swaggerUiHandler",
                "Runtime": "nodejs18.x",
                "FunctionName": "lambda-post-dev-swaggerUiHandler",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SwaggerUiHandlerLogGroup"
              ]
            },
            "PostSpecieLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-25f59da2-0c72",
                  "S3Key": "serverless/lambda-post/dev/1728304090829-2024-10-07T12:28:10.829Z/lambda-post.zip"
                },
                "Handler": "src/handlers/SpecieHandler.postSpecieCreate",
                "Runtime": "nodejs18.x",
                "FunctionName": "lambda-post-dev-postSpecie",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "PostSpecieLogGroup"
              ]
            },
            "PostVehicleLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-25f59da2-0c72",
                  "S3Key": "serverless/lambda-post/dev/1728304090829-2024-10-07T12:28:10.829Z/lambda-post.zip"
                },
                "Handler": "src/handlers/VehicleHandler.postVehicleCreate",
                "Runtime": "nodejs18.x",
                "FunctionName": "lambda-post-dev-postVehicle",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "NODE_OPTIONS": "--enable-source-maps"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "PostVehicleLogGroup"
              ]
            },
            "ApiDocsLambdaVersion0iQtpnS0VxlpMYu5qpPAaQDS8tUwtNS64LwnHavrw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ApiDocsLambdaFunction"
                },
                "CodeSha256": "Xo6e/TVZ/M7F7Jh9ezHKpDGHdLkfAefb+q4Us4UAwvY="
              }
            },
            "SwaggerUiHandlerLambdaVersionFyP72tvaGbPe7x4L1LwjHqfh7ukC8K8RH2yA0n1E8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SwaggerUiHandlerLambdaFunction"
                },
                "CodeSha256": "Xo6e/TVZ/M7F7Jh9ezHKpDGHdLkfAefb+q4Us4UAwvY="
              }
            },
            "PostSpecieLambdaVersion4m89I9MKCdgZRFDrdkHeiI3EXgU8jpH5RzmIWcWCwWo": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PostSpecieLambdaFunction"
                },
                "CodeSha256": "Xo6e/TVZ/M7F7Jh9ezHKpDGHdLkfAefb+q4Us4UAwvY="
              }
            },
            "PostVehicleLambdaVersiony5pdZfH4aw5rYqYGfv8mLYy8X3CBv208XFciMo88Q": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "PostVehicleLambdaFunction"
                },
                "CodeSha256": "Xo6e/TVZ/M7F7Jh9ezHKpDGHdLkfAefb+q4Us4UAwvY="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-lambda-post",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceApiDashdocs": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "api-docs",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceApiDashdoc": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "api-doc",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceSpecie": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "specie",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceVehicle": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "vehicle",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodSpecieOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSpecie"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodVehicleOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceVehicle"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodApiDashdocsGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiDashdocs"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiDocsLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ApiDocsLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodApiDashdocGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceApiDashdoc"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "SwaggerUiHandlerLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "SwaggerUiHandlerLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodSpeciePost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceSpecie"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PostSpecieLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PostSpecieLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodVehiclePost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceVehicle"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "PostVehicleLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "PostVehicleLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1728304086952": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodSpecieOptions",
                "ApiGatewayMethodVehicleOptions",
                "ApiGatewayMethodApiDashdocsGet",
                "ApiGatewayMethodApiDashdocGet",
                "ApiGatewayMethodSpeciePost",
                "ApiGatewayMethodVehiclePost"
              ]
            },
            "ApiDocsLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ApiDocsLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "SwaggerUiHandlerLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "SwaggerUiHandlerLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PostSpecieLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PostSpecieLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "PostVehicleLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "PostVehicleLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-25f59da2-0c72",
              "Export": {
                "Name": "sls-lambda-post-dev-ServerlessDeploymentBucketName"
              }
            },
            "ApiDocsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ApiDocsLambdaVersion0iQtpnS0VxlpMYu5qpPAaQDS8tUwtNS64LwnHavrw"
              },
              "Export": {
                "Name": "sls-lambda-post-dev-ApiDocsLambdaFunctionQualifiedArn"
              }
            },
            "SwaggerUiHandlerLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SwaggerUiHandlerLambdaVersionFyP72tvaGbPe7x4L1LwjHqfh7ukC8K8RH2yA0n1E8"
              },
              "Export": {
                "Name": "sls-lambda-post-dev-SwaggerUiHandlerLambdaFunctionQualifiedArn"
              }
            },
            "PostSpecieLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PostSpecieLambdaVersion4m89I9MKCdgZRFDrdkHeiI3EXgU8jpH5RzmIWcWCwWo"
              },
              "Export": {
                "Name": "sls-lambda-post-dev-PostSpecieLambdaFunctionQualifiedArn"
              }
            },
            "PostVehicleLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "PostVehicleLambdaVersiony5pdZfH4aw5rYqYGfv8mLYy8X3CBv208XFciMo88Q"
              },
              "Export": {
                "Name": "sls-lambda-post-dev-PostVehicleLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-lambda-post-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "apiDocs": {
          "handler": "swaggerHandler.apiDocs",
          "events": [
            {
              "http": {
                "path": "api-docs",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "lambda-post-dev-apiDocs",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "ApiDocsLambdaVersion0iQtpnS0VxlpMYu5qpPAaQDS8tUwtNS64LwnHavrw"
        },
        "swaggerUiHandler": {
          "handler": "swaggerHandler.swaggerUiHandler",
          "events": [
            {
              "http": {
                "path": "api-doc",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "lambda-post-dev-swaggerUiHandler",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "SwaggerUiHandlerLambdaVersionFyP72tvaGbPe7x4L1LwjHqfh7ukC8K8RH2yA0n1E8"
        },
        "postSpecie": {
          "handler": "src/handlers/SpecieHandler.postSpecieCreate",
          "events": [
            {
              "http": {
                "path": "specie",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "lambda-post-dev-postSpecie",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "PostSpecieLambdaVersion4m89I9MKCdgZRFDrdkHeiI3EXgU8jpH5RzmIWcWCwWo"
        },
        "postVehicle": {
          "handler": "src/handlers/VehicleHandler.postVehicleCreate",
          "events": [
            {
              "http": {
                "path": "vehicle",
                "method": "post",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "lambda-post-dev-postVehicle",
          "environment": {
            "NODE_OPTIONS": "--enable-source-maps"
          },
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs18.x",
          "vpc": {},
          "versionLogicalId": "PostVehicleLambdaVersiony5pdZfH4aw5rYqYGfv8mLYy8X3CBv208XFciMo88Q"
        }
      },
      "plugins": [
        "serverless-offline"
      ]
    },
    "serviceRawFile": "service: lambda-post\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: nodejs18.x\r\n  stage: dev\r\n  region: us-east-1\r\n\r\nfunctions:\r\n  apiDocs:\r\n    handler: swaggerHandler.apiDocs\r\n    events:\r\n      - http:\r\n          path: api-docs\r\n          method: get\r\n\r\n  swaggerUiHandler:\r\n    handler: swaggerHandler.swaggerUiHandler\r\n    events:\r\n      - http:\r\n          path: api-doc\r\n          method: get\r\n  postSpecie:\r\n    handler: src/handlers/SpecieHandler.postSpecieCreate\r\n    events:\r\n      - http:\r\n          path: specie\r\n          method: POST\r\n          cors: true\r\n  postVehicle:\r\n    handler: src/handlers/VehicleHandler.postVehicleCreate\r\n    events:\r\n      - http:\r\n          path: vehicle\r\n          method: POST\r\n          cors: true\r\n\r\nplugins:\r\n  - serverless-offline\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": null,
    "params": {},
    "machineId": "3de23c3f15a6a92d40849857d6a712de",
    "stage": "dev",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "ef03eb6e-5d7f-4340-b0d0-582ec88d55a1",
    "orgName": "ksanchez240715",
    "userId": "HFxkgDtB32p26FGysc",
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "ksanchez240715",
    "subscription": null,
    "userEmail": "ksanchez240715@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "430118854729",
    "projectType": "traditional",
    "versionSf": "4.4.4",
    "serviceProviderAwsCfStackName": "lambda-post-dev",
    "integrations": {},
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:430118854729:stack/lambda-post-dev/1bea8160-849d-11ef-80a4-0afff1e6c27f",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:430118854729:stack/lambda-post-dev/1bea8160-849d-11ef-80a4-0afff1e6c27f",
    "serviceProviderAwsCfStackCreated": "2024-10-07T11:12:58.611Z",
    "serviceProviderAwsCfStackUpdated": "2024-10-07T12:28:17.986Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "ApiDocsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:430118854729:function:lambda-post-dev-apiDocs:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-lambda-post-dev-ApiDocsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PostSpecieLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:430118854729:function:lambda-post-dev-postSpecie:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-lambda-post-dev-PostSpecieLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "PostVehicleLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:430118854729:function:lambda-post-dev-postVehicle:4",
        "Description": "Current Lambda function version",
        "ExportName": "sls-lambda-post-dev-PostVehicleLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SwaggerUiHandlerLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:430118854729:function:lambda-post-dev-swaggerUiHandler:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-lambda-post-dev-SwaggerUiHandlerLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://5fgtdvs3md.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-lambda-post-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-25f59da2-0c72",
        "ExportName": "sls-lambda-post-dev-ServerlessDeploymentBucketName"
      }
    ]
  }
}